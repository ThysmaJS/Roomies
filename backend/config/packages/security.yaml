security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        # Ne prot√®ge pas les fichiers statiques et le profiler Symfony
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Authentification par login JSON pour g√©n√©rer un JWT
        login:
            pattern: ^/api/login
            stateless: true
            provider: app_user_provider   # üëà AJOUTE CECI
            json_login:
                check_path: /api/login
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Firewall pour toutes les autres routes de l‚ÄôAPI s√©curis√©es par JWT
        api:
            pattern: ^/api
            stateless: true
            jwt: ~
            provider: app_user_provider

    access_control:
        # On autorise librement l'inscription et la connexion
        - { path: ^/api/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }

        # Toutes les autres routes /api/** n√©cessitent un token JWT valide
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN
